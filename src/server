#!/usr/bin/env python3

import threading
from time import sleep
from os import environ
from os.path import join, dirname, realpath

from dotenv import load_dotenv

from server import Server

projectRoot = realpath(dirname(__file__) + '/..')

dotenv_path = join(projectRoot, '.env')
load_dotenv(dotenv_path)

ipAddress = environ.get('IP_ADDRESS')
port = environ.get('PORT')

server = Server(ipAddress, int(port))


def clientThread(connection, address):
    connection.sendall(b'Welcome to this chatroom!\n')

    while True:
        try:
            message: str = connection.recv(2048).decode('utf-8')
            if message:
                if message.startswith('/online'):
                    online = len(server.clients)
                    msg = f'online: {online}\n'
                    connection.sendall(msg.encode('utf-8'))
                    continue

                name = f"{address[0]} ({address[1]})"
                msg = f'<{name}>: {message}'
                if msg.endswith('\n'):
                    print(msg, end='')
                else:
                    print(msg)
                server.broadcast(address, msg)
            else:
                server.remove(address)
                name = f"{address[0]} ({address[1]})"
                print(f'{name} disconnected')
                break
        except KeyboardInterrupt:
            break
        except:
            continue
        sleep(1)


while True:
    try:
        connection, address = server.accept()
        name = f"{address[0]} ({address[1]})"
        print(f'{name} connected')
        thread = threading.Thread(target=clientThread, args=(connection, address))
        thread.start()
        sleep(1)
    except KeyboardInterrupt:
        break
