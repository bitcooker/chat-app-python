#!/usr/bin/env python3

import socket
import select
import sys
from os import environ
from os.path import join, dirname, realpath
from time import sleep

from dotenv import load_dotenv

projectRoot = realpath(dirname(__file__) + '/..')

dotenv_path = join(projectRoot, '.env')
load_dotenv(dotenv_path)

ipAddress = environ.get('IP_ADDRESS')
port = environ.get('PORT')

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    server.connect((ipAddress, int(port)))
except ConnectionRefusedError:
    print('Cannot connect to server')
    sys.exit(1)

while True:
    try:
        socketsList = [sys.stdin, server]

        readSockets, writeSocket, errorSocket = select.select(
            socketsList, [], [])

        for socks in readSockets:
            if socks == server:
                message: str = socks.recv(2048).decode('utf-8')
                if message.endswith('\n'):
                    print(message, end='')
                else:
                    print(message)
            else:
                message = sys.stdin.readline()
                if not message.startswith('/'):
                    server.sendall(message.encode('utf-8'))
                    print(f'\x1b[A<You>: {message}', end='')
                elif message.startswith('/exit'):
                    sys.exit(1)
                else:
                    server.sendall(message.encode('utf-8'))
            sys.stdout.flush()
        sleep(1)
    except KeyboardInterrupt:
        sys.exit(0)
